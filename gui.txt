# gui.py
import os
import subprocess
import sys
import customtkinter as ctk


# === –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ stdout –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ GUI ===
class StdoutRedirector:
    """
    –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–≤–æ–¥ print() –∏ –¥—É–±–ª–∏—Ä—É–µ—Ç –µ–≥–æ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ GUI –∏ –≤ –∫–æ–Ω—Å–æ–ª—å.
    –≠—Ç–æ —É–¥–æ–±–Ω–æ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏.
    """
    def __init__(self, text_widget):
        self.text_widget = text_widget
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π stdout; sys.__stdout__ –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ —É–∂–µ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∞–ª sys.stdout
        self.original_stdout = sys.__stdout__ or sys.stdout

    def write(self, message):
        if not message.strip():
            return

        # –ü–µ—á–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
        try:
            if self.original_stdout:
                self.original_stdout.write(message)
                self.original_stdout.flush()
        except Exception:
            # –ù–µ —Ä–æ–Ω—è–µ–º GUI, –µ—Å–ª–∏ –∫–æ–Ω—Å–æ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
            pass

        # –ü–µ—á–∞—Ç—å –≤ GUI
        try:
            if self.text_widget.winfo_exists():
                self.text_widget.configure(state="normal")
                self.text_widget.insert("end", message)
                self.text_widget.see("end")  # –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞
                self.text_widget.configure(state="disabled")
        except Exception:
            pass

    def flush(self):
        """–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º —Ñ–∞–π–ª–∞."""
        try:
            if self.original_stdout:
                self.original_stdout.flush()
        except Exception:
            pass


# === –í—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ ¬´–∑–∞–ª–∏–ø–∞—é—Ç¬ª ===
class ToolTip:
    """
    –ù–∞–¥—ë–∂–Ω–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞.
    –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
    - –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º.
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ —É—Ö–æ–¥–µ –∫—É—Ä—Å–æ—Ä–∞ —Å –≤–∏–¥–∂–µ—Ç–∞ –∏–ª–∏ —Å–∞–º–æ–π –ø–æ–¥—Å–∫–∞–∑–∫–∏.
    - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π ¬´—Å—Ç–æ—Ä–æ–∂¬ª (watchdog): –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
      –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É, –µ—Å–ª–∏ –∫—É—Ä—Å–æ—Ä —É—à—ë–ª (—É—Å—Ç—Ä–∞–Ω—è–µ—Ç ¬´–≤–∏—Å—è—â–∏–µ¬ª –ø–æ–¥—Å–∫–∞–∑–∫–∏).
    """
    def __init__(self, widget, text, delay=500, watch_interval=150):
        """
        widget: –≤–∏–¥–∂–µ—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∞
        text: —Ç–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
        delay: –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º, –º—Å
        watch_interval: –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è –∫—É—Ä—Å–æ—Ä–∞, –º—Å
        """
        self.widget = widget
        self.text = text
        self.delay = delay
        self.watch_interval = watch_interval

        self.tip_window = None
        self.show_id = None        # id after() –¥–ª—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞
        self.watch_id = None       # id after() –¥–ª—è —Å—Ç–æ—Ä–æ–∂–∞

        # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥–∂–µ—Ç—É
        self.widget.bind("<Enter>", self._on_enter, add="+")
        self.widget.bind("<Leave>", self._on_leave, add="+")
        self.widget.bind("<ButtonPress>", self._on_leave, add="+")
        # –ù–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ ‚Äî –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        self.widget.winfo_toplevel().bind("<Destroy>", self._on_destroy, add="+")

    # --- –°–æ–±—ã—Ç–∏—è –≤–∏–¥–∂–µ—Ç–∞ ---
    def _on_enter(self, _event=None):
        # –ü–ª–∞–Ω–∏—Ä—É–µ–º –ø–æ–∫–∞–∑ —á–µ—Ä–µ–∑ delay
        self._schedule_show()

    def _on_leave(self, _event=None):
        # –û—Ç–º–µ–Ω—è–µ–º –ø–æ–∫–∞–∑ –∏ —Å–∫—Ä—ã–≤–∞–µ–º, –µ—Å–ª–∏ —É–∂–µ –≤–∏–¥–Ω–æ
        self._unschedule_show()
        self.hide()

    # --- –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞ ---
    def _schedule_show(self):
        self._unschedule_show()
        self.show_id = self.widget.after(self.delay, self.show)

    def _unschedule_show(self):
        if self.show_id is not None:
            try:
                self.widget.after_cancel(self.show_id)
            except Exception:
                pass
            self.show_id = None

    # --- –ü–æ–∫–∞–∑ –ø–æ–¥—Å–∫–∞–∑–∫–∏ ---
    def show(self):
        if self.tip_window or not self.text:
            return

        # –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ–∫–æ–ª–æ –≤–∏–¥–∂–µ—Ç–∞
        try:
            x = self.widget.winfo_rootx() + 20
            y = self.widget.winfo_rooty() + self.widget.winfo_height() + 5
        except Exception:
            return

        # –°–æ–∑–¥–∞—ë–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –±–µ–∑ —Ä–∞–º–∫–∏, –ø–æ–≤–µ—Ä—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
        self.tip_window = ctk.CTkToplevel(self.widget)
        self.tip_window.wm_overrideredirect(True)
        self.tip_window.wm_geometry(f"+{x}+{y}")
        self.tip_window.attributes("-topmost", True)

        # –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
        label = ctk.CTkLabel(
            self.tip_window,
            text=self.text,
            fg_color="gray20",
            corner_radius=6,
            padx=8,
            pady=4,
            justify="left",
        )
        label.pack()

        # –°–æ–±—ã—Ç–∏—è –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏: —É—Ö–æ–¥ –∫—É—Ä—Å–æ—Ä–∞ ‚Äî —Å–∫—Ä—ã—Ç—å
        self.tip_window.bind("<Leave>", lambda _e: self.hide(), add="+")
        self.tip_window.bind("<ButtonPress>", lambda _e: self.hide(), add="+")
        self.tip_window.bind("<Enter>", lambda _e: self._start_watchdog(), add="+")

        # –°—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º ¬´—Å—Ç–æ—Ä–æ–∂¬ª ‚Äî –Ω–∞ —Å–ª—É—á–∞–π –±—ã—Å—Ç—Ä—ã—Ö –¥–≤–∏–∂–µ–Ω–∏–π –∫—É—Ä—Å–æ—Ä–∞
        self._start_watchdog()

    # --- –°—Ç–æ—Ä–æ–∂: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–æ–∂–µ–Ω–∏—è –∫—É—Ä—Å–æ—Ä–∞ ---
    def _start_watchdog(self):
        self._stop_watchdog()
        self.watch_id = self.widget.after(self.watch_interval, self._watch_cursor)

    def _stop_watchdog(self):
        if self.watch_id is not None:
            try:
                self.widget.after_cancel(self.watch_id)
            except Exception:
                pass
            self.watch_id = None

    def _watch_cursor(self):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∫—É—Ä—Å–æ—Ä –Ω–∞–¥ –∏—Å—Ö–æ–¥–Ω—ã–º –≤–∏–¥–∂–µ—Ç–æ–º –∏–ª–∏ –Ω–∞–¥ –ø–æ–¥—Å–∫–∞–∑–∫–æ–π.
        –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É.
        """
        try:
            # –¢–µ–∫—É—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫—É—Ä—Å–æ—Ä–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
            px = self.widget.winfo_pointerx()
            py = self.widget.winfo_pointery()

            def inside(win):
                if not win:
                    return False
                # –ì–µ–æ–º–µ—Ç—Ä–∏—è –æ–∫–Ω–∞
                x = win.winfo_rootx()
                y = win.winfo_rooty()
                w = win.winfo_width()
                h = win.winfo_height()
                return (x <= px <= x + w) and (y <= py <= y + h)

            over_widget = inside(self.widget)
            over_tip = inside(self.tip_window)

            if not (over_widget or over_tip):
                # –ö—É—Ä—Å–æ—Ä —É—à—ë–ª ‚Äî —Å–∫—Ä—ã–≤–∞–µ–º –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–æ—Ä–æ–∂
                self.hide()
                self._stop_watchdog()
                return
        except Exception:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ—Å—Ç–æ —Å–∫—Ä—ã–≤–∞–µ–º
            self.hide()
            self._stop_watchdog()
            return

        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ
        self._start_watchdog()

    # --- –°–∫—Ä—ã—Ç–∏–µ –∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ ---
    def hide(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –ø–æ–¥—Å–∫–∞–∑–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."""
        if self.tip_window:
            try:
                self.tip_window.destroy()
            except Exception:
                pass
            self.tip_window = None

    def _on_destroy(self, _event=None):
        """–ü—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ ‚Äî —É–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –∏ –æ—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä—ã."""
        self._unschedule_show()
        self._stop_watchdog()
        self.hide()


# === –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
class DealApp(ctk.CTk):
    """
    –ù–µ–±–æ–ª—å—à–æ–µ GUI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:
    - –í–≤–æ–¥ ID —Å–¥–µ–ª–∫–∏.
    - –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π (–∏–º–ø–æ—Ä—Ç, —Ä–∞—Å—á—ë—Ç, —ç–∫—Å–ø–æ—Ä—Ç, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø–∞–ø–∫–∏).
    - –õ–æ–≥ –≤–Ω–∏–∑—É –æ–∫–Ω–∞, –∫—É–¥–∞ –≤—ã–≤–æ–¥–∏—Ç—Å—è print().
    """
    def __init__(self):
        super().__init__()
        self.title("–†–∞—Å—á–µ—Ç –õ–®–û")
        self.geometry("480x540")  # –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –≤—ã—Å–æ—Ç–∞ –ø–æ–¥ –ª–æ–≥ –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏
        self.resizable(False, False)

        # ‚Äî –ü–æ–ª–µ –≤–≤–æ–¥–∞ ID —Å–¥–µ–ª–∫–∏ ‚Äî
        ctk.CTkLabel(self, text="ID —Å–¥–µ–ª–∫–∏:", font=("Helvetica", 14)).pack(pady=(20, 5))
        self.deal_id_entry = ctk.CTkEntry(self, width=300, font=("Helvetica", 13))
        self.deal_id_entry.pack(pady=5)

        # ‚Äî –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π ‚Äî
        button_data = [
            ("üì• –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", "–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ ID —Å–¥–µ–ª–∫–∏", self.import_data),
            ("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å", "–í—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞—Å—á—ë—Ç –ø–æ —Å–¥–µ–ª–∫–µ", self.calculate),
            ("üì§ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", "–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", self.export_data),
            ("üìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å 3–ö–ü", "–°–æ–∑–¥–∞—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", self.generate_3kp),
            ("üìã –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –¢–ó", "–°–æ–∑–¥–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ", self.generate_tz),
            ("üìÇ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É", "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏", self.open_folder),
        ]

        self.buttons = []
        for i in range(0, len(button_data), 2):
            frame = ctk.CTkFrame(self, fg_color="transparent")
            frame.pack(pady=8)
            for j in range(2):
                if i + j < len(button_data):
                    text, tooltip, command = button_data[i + j]
                    btn = ctk.CTkButton(
                        frame,
                        text=text,
                        width=200,
                        height=60,
                        font=("Helvetica", 12),
                        command=command
                    )
                    btn.pack(side="left", padx=10)
                    ToolTip(btn, tooltip, delay=450, watch_interval=120)  # –ø–æ–¥—Å–∫–∞–∑–∫–∏ –±–µ–∑ ¬´–∑–∞–ª–∏–ø–∞–Ω–∏—è¬ª
                    self.buttons.append(btn)

        # ‚Äî –ü–æ–ª–µ –ª–æ–≥–∞ ‚Äî
        ctk.CTkLabel(self, text="–õ–æ–≥:", font=("Helvetica", 11)).pack(anchor="w", padx=20, pady=(15, 0))
        self.log_textbox = ctk.CTkTextbox(self, height=140, wrap="word", font=("Consolas", 10))
        self.log_textbox.pack(fill="both", padx=20, pady=(5, 15), expand=False)
        self.log_textbox.configure(state="disabled")

        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º stdout –≤ –ª–æ–≥
        sys.stdout = StdoutRedirector(self.log_textbox)

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º main –ø–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è stdout
        import main
        self.main_module = main

    # === –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ –∏ –≤–≤–æ–¥–∞ ===
    def show_message(self, title: str, message: str):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π OK."""
        dialog = ctk.CTkToplevel(self)
        dialog.title(title)
        dialog.geometry("350x140")
        dialog.resizable(False, False)
        dialog.transient(self)
        dialog.grab_set()

        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –æ–∫–Ω–∞
        self.update_idletasks()
        x = self.winfo_x() + (self.winfo_width() // 2) - 175
        y = self.winfo_y() + (self.winfo_height() // 2) - 70
        dialog.geometry(f"+{x}+{y}")

        ctk.CTkLabel(dialog, text=message, wraplength=320, justify="center").pack(pady=(20, 10))
        ctk.CTkButton(dialog, text="OK", width=90, command=dialog.destroy).pack(pady=(0, 15))

        # –ë—ã—Å—Ç—Ä—ã–µ –∫–ª–∞–≤–∏—à–∏
        dialog.bind("<Return>", lambda e: dialog.destroy())
        dialog.bind("<Escape>", lambda e: dialog.destroy())
        dialog.focus_set()

    def get_deal_id(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Å–¥–µ–ª–∫–∏ –∏–∑ –ø–æ–ª—è –≤–≤–æ–¥–∞. –ï—Å–ª–∏ –ø—É—Å—Ç–æ ‚Äî —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ.
        –ü—Ä–∏ –≤–≤–æ–¥–µ —á–µ—Ä–µ–∑ –æ–∫–Ω–æ ‚Äî –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞.
        """
        deal_id = self.deal_id_entry.get().strip()
        if not deal_id:
            deal_id = self.ask_deal_id()
            if deal_id:
                self.deal_id_entry.delete(0, "end")
                self.deal_id_entry.insert(0, deal_id)
            else:
                return None
        return deal_id

    def ask_deal_id(self):
        """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ ID —Å–¥–µ–ª–∫–∏. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–ª–∏ None –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ."""
        dialog = ctk.CTkToplevel(self)
        dialog.title("–í–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏")
        dialog.geometry("320x140")
        dialog.resizable(False, False)
        dialog.transient(self)
        dialog.grab_set()

        ctk.CTkLabel(dialog, text="ID —Å–¥–µ–ª–∫–∏:", font=("Helvetica", 12)).pack(pady=(15, 5))
        entry = ctk.CTkEntry(dialog, width=220, font=("Helvetica", 12))
        entry.pack(pady=5)
        entry.focus()

        result = [None]

        def on_ok():
            value = entry.get().strip()
            result[0] = value if value else None
            dialog.destroy()

        def on_cancel():
            dialog.destroy()

        btn_frame = ctk.CTkFrame(dialog, fg_color="transparent")
        btn_frame.pack(pady=10)
        ctk.CTkButton(btn_frame, text="OK", command=on_ok, width=90).pack(side="left", padx=6)
        ctk.CTkButton(btn_frame, text="–û—Ç–º–µ–Ω–∞", command=on_cancel, width=90).pack(side="left", padx=6)

        # –û–∂–∏–¥–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –∏–º–µ–Ω–Ω–æ dialog (–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–ø–æ—Å–æ–±)
        dialog.wait_window()
        return result[0]

    def show_error(self, msg):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –æ—à–∏–±–∫–∏."""
        self.show_message("–û—à–∏–±–∫–∞", msg)

    def safe_call(self, func, deal_id, success_msg):
        """
        –ë–µ–∑–æ–ø–∞—Å–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–æ–¥—É–ª—è main.
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∏–ª–∏ –æ—à–∏–±–∫—É.
        """
        try:
            func(deal_id)
            self.show_message("–ì–æ—Ç–æ–≤–æ", success_msg)
        except Exception as e:
            self.show_error(f"–û—à–∏–±–∫–∞: {e}")

    # === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ ===
    def import_data(self):
        print("–Ω–∞—á–∞–ª–∏ –∏–º–ø–æ—Ä—Ç...\n")
        if deal_id := self.get_deal_id():
            self.safe_call(self.main_module.import_data, deal_id, f"–î–∞–Ω–Ω—ã–µ –¥–ª—è {deal_id} –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã.")

    def calculate(self):
        if deal_id := self.get_deal_id():
            self.safe_call(self.main_module.calculate, deal_id, f"–†–∞—Å—á—ë—Ç –¥–ª—è {deal_id} –∑–∞–≤–µ—Ä—à—ë–Ω.")

    def export_data(self):
        if deal_id := self.get_deal_id():
            self.safe_call(self.main_module.export_data, deal_id, "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã.")

    def generate_3kp(self):
        if deal_id := self.get_deal_id():
            self.safe_call(self.main_module.generate_3kp, deal_id, f"3–ö–ü –¥–ª—è {deal_id} —Å–æ–∑–¥–∞–Ω–æ.")

    def generate_tz(self):
        if deal_id := self.get_deal_id():
            self.safe_call(self.main_module.generate_tz, deal_id, f"–¢–ó –¥–ª—è {deal_id} —Å–æ–∑–¥–∞–Ω–æ.")

    def open_folder(self):
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–ø–∫—É: [—Ç–µ–∫—É—â–∞—è]/–†–∞—Å—á–µ—Ç—ã/{deal_id}
        –°–æ–∑–¥–∞—ë—Ç –µ—ë –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏.
        """
        deal_id = self.get_deal_id()
        if not deal_id:
            return

        current_dir = os.path.dirname(os.path.abspath(__file__))
        target_dir = os.path.join(current_dir, "–†–∞—Å—á–µ—Ç—ã", deal_id)
        os.makedirs(target_dir, exist_ok=True)

        try:
            if sys.platform == "win32":
                os.startfile(target_dir)  # type: ignore[attr-defined]
            elif sys.platform == "darwin":
                subprocess.run(["open", target_dir], check=False)
            else:
                subprocess.run(["xdg-open", target_dir], check=False)
        except Exception as e:
            self.show_error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É:\n{e}")


if __name__ == "__main__":
    app = DealApp()
    app.mainloop()
